-|script|happy-curse|32767
{
    callfunc "magic_checks"; if(@failed) end; // << I wish we had functions that could return >>
    if (Sp < 13) end;
    set .@level, getskilllv(.school);
    if (.@level < .level) end;
    if (getskilllv(SKILL_MAGIC) < .level) end;
    if (.@level <= 3 && countitem("GingerBreadMan") >= 1) delitem "GingerBreadMan", 1;
    elif (.@level <= 3) end;
    set @target_id, getcharid(3, @args$);
    if (@target_id < 1 || !(isloggedin(@target_id))) set @target_id, BL_ID; // fallback to self

    set MAGIC_CAST_TICK, gettimetick(2) + 1; // set the new debuff
    callfunc "adjust_spellpower";
    set Sp, Sp - 13;
    misceffect FX_MAGIC_GREEN, strcharinfo(0);
    callfunc "magic_exp";

    if (distance(BL_ID, @target_id) >= (@spellpower/100)+1) set @target_id, BL_ID;
    if (BL_ID == @target_id) set @args$, strcharinfo(0);
    set @joyplim_count, 1, @target_id;
    set @joyplim_emote, if_then_else(getskilllv(SKILL_MAGIC_DARK) > 1, EMOTE_EVIL, EMOTE_HAPPY), @target_id;
    set @joyplim_total, (@spellpower/10), @target_id;
    if (attachrid(@target_id) != 1) end;
    emotion @joyplim_emote, "self";
    addtimer 500, strnpcinfo(0)+"::OnEmote";
    end;

OnEmote:
    emotion @joyplim_emote, "self";
    set @joyplim_count, @joyplim_count + 1;
    if (@joyplim_count < @joyplim_total) addtimer 500, strnpcinfo(0)+"::OnEmote";
    end;

OnInit:
    set .school, SKILL_MAGIC_NATURE;
    set .invocation$, chr(MAGIC_SYMBOL) + "joyplim"; // used in npcs that refer to this spell
    callfunc "magic_register";
    set .level, 2;
    set .exp_gain, 1;
    end;
}
